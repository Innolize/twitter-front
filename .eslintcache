[{"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\reportWebVitals.ts":"1","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\App.tsx":"2","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\index.tsx":"3","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\General.tsx":"4","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\leftSidebar\\Sidebar.tsx":"5","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\CrearComentario.tsx":"6","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\post\\Post.tsx":"7","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\sign-in\\SignIn.tsx":"8","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\reducer\\index.ts":"9","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\store.ts":"10","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\index.tsx":"11","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\sign-in\\CreateAccount.tsx":"12","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\reducer\\authReducer.ts":"13","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\types\\AuthActionTypes.ts":"14","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\actions\\logginAction.ts":"15","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\leftSidebar\\ProfileButton.tsx":"16","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\MainPage.tsx":"17","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\CreateAccount.tsx":"18","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\LogIn.tsx":"19","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\common\\IAxios.ts":"20","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\getPosts.js":"21","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\hooks\\useFetch.tsx":"22","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\hooks\\useFetch.types.tsx":"23","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\createPost.ts":"24","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\common\\Snackbar.tsx":"25","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\getPostById.tsx":"26","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\post\\DetailedPost.tsx":"27","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\Post.typeguard.ts":"28","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\Comment.tsx":"29","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\PostArray.typeguard.ts":"30","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\CommentContainer.tsx":"31","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\comment\\createComment.ts":"32","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\comment\\getComments.ts":"33","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\CommentArray.typeguard.ts":"34","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\common\\OptionsMenu.tsx":"35","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\CreateComment.tsx":"36","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\ProfileImages.tsx":"37","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\ProfileInfo.tsx":"38","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\user\\getUser.ts":"39","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\ProfilePage.tsx":"40","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\UserSpecificPosts.tsx":"41","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\user\\getUserPosts.ts":"42"},{"size":425,"mtime":1607391992972,"results":"43","hashOfConfig":"44"},{"size":850,"mtime":1609430743027,"results":"45","hashOfConfig":"44"},{"size":614,"mtime":1607788548419,"results":"46","hashOfConfig":"44"},{"size":1060,"mtime":1609583142889,"results":"47","hashOfConfig":"44"},{"size":2239,"mtime":1609673732223,"results":"48","hashOfConfig":"44"},{"size":3332,"mtime":1609442813249,"results":"49","hashOfConfig":"44"},{"size":2886,"mtime":1609676720638,"results":"50","hashOfConfig":"44"},{"size":4952,"mtime":1608591437336,"results":"51","hashOfConfig":"44"},{"size":221,"mtime":1608168407696,"results":"52","hashOfConfig":"44"},{"size":356,"mtime":1608148566035,"results":"53","hashOfConfig":"44"},{"size":60,"mtime":1608501449392,"results":"54","hashOfConfig":"44"},{"size":6822,"mtime":1608589280131,"results":"55","hashOfConfig":"44"},{"size":1264,"mtime":1609243586260,"results":"56","hashOfConfig":"44"},{"size":789,"mtime":1608898052600,"results":"57","hashOfConfig":"44"},{"size":1842,"mtime":1609332484303,"results":"58","hashOfConfig":"44"},{"size":1924,"mtime":1608357337140,"results":"59","hashOfConfig":"44"},{"size":2865,"mtime":1609666281640,"results":"60","hashOfConfig":"44"},{"size":223,"mtime":1608501360588,"results":"61","hashOfConfig":"44"},{"size":178,"mtime":1608501242985,"results":"62","hashOfConfig":"44"},{"size":495,"mtime":1609588764598,"results":"63","hashOfConfig":"44"},{"size":248,"mtime":1609405485696,"results":"64","hashOfConfig":"44"},{"size":1405,"mtime":1609666541508,"results":"65","hashOfConfig":"44"},{"size":642,"mtime":1609573532100,"results":"66","hashOfConfig":"44"},{"size":454,"mtime":1609442662922,"results":"67","hashOfConfig":"44"},{"size":1140,"mtime":1609429342425,"results":"68","hashOfConfig":"44"},{"size":344,"mtime":1609522162284,"results":"69","hashOfConfig":"44"},{"size":1185,"mtime":1609591932313,"results":"70","hashOfConfig":"44"},{"size":139,"mtime":1609502123725,"results":"71","hashOfConfig":"44"},{"size":2727,"mtime":1609587841630,"results":"72","hashOfConfig":"44"},{"size":151,"mtime":1609502254043,"results":"73","hashOfConfig":"44"},{"size":1460,"mtime":1609591800593,"results":"74","hashOfConfig":"44"},{"size":558,"mtime":1609587279236,"results":"75","hashOfConfig":"44"},{"size":399,"mtime":1609590441596,"results":"76","hashOfConfig":"44"},{"size":245,"mtime":1609573580702,"results":"77","hashOfConfig":"44"},{"size":1219,"mtime":1609576206225,"results":"78","hashOfConfig":"44"},{"size":1355,"mtime":1609588982231,"results":"79","hashOfConfig":"44"},{"size":1734,"mtime":1609664567222,"results":"80","hashOfConfig":"44"},{"size":1465,"mtime":1609669325932,"results":"81","hashOfConfig":"44"},{"size":259,"mtime":1609666395835,"results":"82","hashOfConfig":"44"},{"size":1204,"mtime":1609674526985,"results":"83","hashOfConfig":"44"},{"size":892,"mtime":1609673529160,"results":"84","hashOfConfig":"44"},{"size":286,"mtime":1609673573562,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"12j0k8s",{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\reportWebVitals.ts",[],["186","187"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\App.tsx",["188","189"],"import { Container, Grid } from '@material-ui/core';\nimport { Sidebar } from './componentes/leftSidebar/Sidebar';\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom'\nimport { MainPage } from './screens/MainPage';\nimport { LogIn } from './screens/LogIn';\nimport { CreateAccount } from './screens/CreateAccount';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container >\n        <Router>\n          <Route path=\"/login\" exact>\n            <LogIn />\n          </Route>\n          <Route path=\"/create-account\" exact>\n            <CreateAccount />\n          </Route>\n          <Route path=\"/main\" >\n            <MainPage />\n          </Route>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/main\"></Redirect>\n          </Route>\n        </Router>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\index.tsx",[],["190","191"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\General.tsx",["192","193","194","195"],"import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/reducer'\r\nimport { CrearComentario } from './CrearComentario'\r\nimport { Post } from './post/Post'\r\nimport { useFetchReducer } from '../../hooks/useFetch'\r\nimport { getPosts } from '../../api/post/getPosts'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport { isPostArray } from '../../types/typeguards/PostArray.typeguard'\r\n\r\n\r\nexport const General: React.FC = () => {\r\n    const user = useSelector((state: RootState) => state.authReducer.user)\r\n    const { errorMessage, loading, successData } = useFetchReducer({ fetchCallback: getPosts })\r\n\r\n    if (loading) {\r\n        return <CircularProgress />\r\n    }\r\n\r\n    if (isPostArray(successData)) {\r\n        return (\r\n            <>\r\n                { user && <CrearComentario user={user} />}\r\n                { successData.map((el, i) => <Post post={el} order={i} key={i} />)}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return null\r\n\r\n}\r\n\r\n","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\leftSidebar\\Sidebar.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\CrearComentario.tsx",["196","197"],"import { Avatar, Box, Button, createStyles, Input, makeStyles, Theme } from '@material-ui/core';\r\nimport PhotoIcon from '@material-ui/icons/Photo'\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { User } from '../../types/User';\r\nimport { createPost } from '../../api/post/createPost';\r\nimport { PositionedSnackbar } from '../common/Snackbar'\r\nimport { Post } from '../../types/Post';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        large: {\r\n            width: theme.spacing(7),\r\n            height: theme.spacing(7),\r\n            margin: \"20px 10px 20px 10px\"\r\n        },\r\n        textField: {\r\n            margin: \"10px 10px 10px 10px\",\r\n            width: \"90%\"\r\n        },\r\n        root: {\r\n            display: \"flex\",\r\n            padding: 10,\r\n            margin: 20,\r\n            border: \"solid #E1E8ED 1px\"\r\n        },\r\n        contenedorMultimedia: {\r\n            flexGrow: 1\r\n        },\r\n        contenedorBotones: {\r\n            display: \"flex\",\r\n            width: \"90%\",\r\n            alignItems: \"center\"\r\n        }\r\n    }),\r\n);\r\n\r\ninterface Props {\r\n    user: User\r\n}\r\n\r\nexport const CrearComentario: React.FC<Props> = ({ user }) => {\r\n    const [postContent, setPostContent] = useState(\"\")\r\n    const [error, setError] = useState<string>(\"\")\r\n    const [success, setSuccess] = useState<any>(null)\r\n    const classes = useStyles()\r\n\r\n    const inputOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPostContent(e.target.value)\r\n    }\r\n\r\n    const sendNewPost = async () => {\r\n        const { success, response, error } = await createPost(postContent)\r\n        if (success) {\r\n            setSuccess(response)\r\n            setPostContent(\"\")\r\n        } else if (error) {\r\n            setError(error)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.root}>\r\n                <Avatar alt=\"carlitos test\" src={user.profilePicture || undefined} className={classes.large}></Avatar>\r\n                <Box style={{ width: \"90%\" }}>\r\n                    <Input placeholder=\"Que querés compartir hoy?\" className={classes.textField} value={postContent} onChange={inputOnChange} />\r\n                    <Box className={classes.contenedorBotones} id=\"contenedor-botones\" >\r\n                        <Box style={{ flexGrow: 1 }} id=\"contenedor-multimedia\">\r\n                            <PhotoIcon fontSize=\"large\" />\r\n                            <YouTubeIcon fontSize=\"large\" />\r\n                        </Box>\r\n\r\n                        <Button\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            endIcon={<SendIcon />}\r\n                            onClick={sendNewPost}\r\n                        >\r\n                            Enviar\r\n                    </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            {success && <PositionedSnackbar open={true} severity=\"success\" message=\"Posted successfuly!\"></PositionedSnackbar>}\r\n            {error && <PositionedSnackbar open={true} severity=\"error\" message={error || \"error\"}></PositionedSnackbar>}\r\n        </>\r\n    );\r\n}","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\post\\Post.tsx",["198"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\sign-in\\SignIn.tsx",["199","200","201"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useForm } from 'react-hook-form'\r\nimport Axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../redux/actions/logginAction'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { InitialState } from '../../redux/reducer/authReducer';\r\nimport { RootState } from '../../redux/reducer';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport const SignInSide = () => {\r\n  const dispatch = useDispatch()\r\n  const auth = useSelector((state: RootState) => state.authReducer)\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm()\r\n  const [logginError, setLogginError] = useState(\"\")\r\n\r\n  const onSubmit = async (data: any) => {\r\n    dispatch(login(data))\r\n  }\r\n\r\n  if (auth.user) {\r\n    return <Redirect to=\"/main\"></Redirect>\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              inputRef={register}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={register}\r\n            />\r\n            {logginError &&\r\n              <Typography variant=\"body2\" align=\"center\" color=\"secondary\">{logginError}</Typography>\r\n            }\r\n\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/create-account\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\reducer\\index.ts",[],["202","203"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\store.ts",["204"],"import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport reducers from './reducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nconst middlewares = [\r\n    reduxThunk\r\n]\r\n\r\nexport const store = createStore(reducers,\r\n    composeWithDevTools(applyMiddleware(...middlewares))\r\n)","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\index.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\sign-in\\CreateAccount.tsx",["205","206","207","208"],"import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios'\r\n\r\nimport { useForm } from 'react-hook-form'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../redux/actions/logginAction';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { RootState } from '../../redux/reducer';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nexport const CreateAccount = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const auth = useSelector((state: RootState) => state.authReducer)\r\n    const classes = useStyles();\r\n    const { register, handleSubmit } = useForm<FormData>()\r\n\r\n    const onSubmit = async (data: any) => {\r\n        dispatch(login(data, { new: true }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        let listener = (e: KeyboardEvent) => {\r\n            if (e.key === \"Enter\") {\r\n                handleSubmit(onSubmit)\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"keydown\", listener)\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener)\r\n        }\r\n    }, [])\r\n\r\n    if (auth.user) {\r\n        return <Redirect to=\"/main\"></Redirect>\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"name\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                                inputRef={register}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"surname\"\r\n                                label=\"Last Name\"\r\n                                name=\"surname\"\r\n                                autoComplete=\"lname\"\r\n                                inputRef={register}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                inputRef={register}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                inputRef={register}\r\n                            />\r\n                        </Grid>\r\n                        <ul>\r\n                            {auth.errors && auth.errors.map((err, i) => <li key={i}>{err}</li>)}\r\n                        </ul>\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n          </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n              </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\reducer\\authReducer.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\types\\AuthActionTypes.ts",[],["209","210"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\actions\\logginAction.ts",["211"],"import { Dispatch } from 'react'\r\nimport { User } from '../../types/User'\r\nimport { AuthActionTypes, LOGIN, LOADING, LOGIN_ERROR, loginPayload } from '../types/AuthActionTypes'\r\nimport { InitialState } from '../reducer/authReducer'\r\nimport { axiosI } from '../../common/IAxios'\r\n\r\ninterface logInfo {\r\n    email: string\r\n    password: string\r\n    name?: string\r\n    surname?: string\r\n}\r\n\r\ninterface NewAccount {\r\n    new: boolean\r\n}\r\n\r\nexport const login = (data: logInfo, newAccount?: NewAccount) => async (dispatch: Dispatch<AuthActionTypes>, getState: () => InitialState) => {\r\n    try {\r\n        dispatch({ type: LOADING })\r\n\r\n        if (newAccount) {\r\n            await axiosI.post('/user', data, { withCredentials: true })\r\n        }\r\n        const loggear = (await axiosI.post('/auth', data, { withCredentials: true })).data\r\n\r\n        dispatch({ type: LOGIN, payload: loggear })\r\n    } catch (error) {\r\n        if (error.response) {\r\n            let errors = error.response.data.message\r\n            dispatch({ type: LOGIN_ERROR, payload: { errors: errors } })\r\n        }\r\n    }\r\n}\r\n\r\ninterface RefreshReponse {\r\n    user: User,\r\n    message?: string,\r\n    access_token: string\r\n}\r\n\r\nexport const handleRefreshToken = () => async (dispatch: Dispatch<AuthActionTypes>) => {\r\n\r\n    try {\r\n        dispatch({ type: LOADING })\r\n        const loggear: RefreshReponse = (await axiosI.post('/auth/refresh', { withCredentials: true })).data\r\n        if (loggear.access_token) {\r\n            dispatch({ type: LOGIN, payload: { user: loggear.user, access_token: loggear.access_token } })\r\n        } else {\r\n            dispatch({ type: LOGIN_ERROR, payload: { errors: [loggear.message ? loggear.message : 'loggin error'] } })\r\n        }\r\n    } catch (err) {\r\n        dispatch({ type: LOGIN_ERROR, payload: { errors: [\"error \"] } })\r\n    }\r\n\r\n}","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\leftSidebar\\ProfileButton.tsx",["212"],"import { Avatar, Button, createStyles, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Menu, MenuItem, Theme } from '@material-ui/core'\r\nimport React, { useRef, useState } from 'react'\r\nimport { User } from '../../types/User'\r\nimport { LOG_OUT, } from '../../redux/types/AuthActionTypes'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        rounded: {\r\n            borderRadius: '25px'\r\n        }\r\n    })\r\n)\r\n\r\ninterface ProfileButtonProps {\r\n    user: User\r\n}\r\n\r\nexport const ProfileButton = ({ user }: ProfileButtonProps) => {\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n    const buttonRef = useRef<HTMLDivElement>(null)\r\n    const [show, setShow] = useState<boolean>(false)\r\n    const logout = () => {\r\n        dispatch({ type: LOG_OUT })\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            <ListItem button className={classes.rounded} ref={buttonRef} onClick={() => {setShow(true); console.log('no tengo que entrar aca')}}>\r\n                <ListItemAvatar>\r\n                    <Avatar src={user && user.profilePicture ? user.profilePicture : undefined}\r\n                        alt={user.name}\r\n                    ></Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={\"\" + user.name + \" \" + user.surname}\r\n                >\r\n                </ListItemText>\r\n            </ListItem>\r\n            <Menu\r\n                id=\"fade-menu\"\r\n                anchorEl={buttonRef.current}\r\n                keepMounted\r\n                open={show}\r\n                onClose={() => setShow(false)}\r\n            >\r\n                <MenuItem onClick={logout}>Log out</MenuItem>\r\n                {/* <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                <MenuItem onClick={handleClose}>Logout</MenuItem> */}\r\n            </Menu>\r\n        </List>\r\n    )\r\n\r\n}","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\MainPage.tsx",["213","214","215","216"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\CreateAccount.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\LogIn.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\common\\IAxios.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\getPosts.js",[],["217","218"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\hooks\\useFetch.tsx",["219","220"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\hooks\\useFetch.types.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\createPost.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\common\\Snackbar.tsx",["221"],"import Snackbar, { SnackbarOrigin } from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/alert';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport interface Props {\r\n    open: boolean;\r\n    severity: \"error\" | \"success\" | \"info\" | \"warning\",\r\n    message: string\r\n}\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport const PositionedSnackbar: React.FC<Props> = ({ open, severity, message }) => {\r\n    const [state, setState] = useState({\r\n        open: open,\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n    });\r\n\r\n    const handleClose = () => {\r\n        setState({ ...state, open: false });\r\n    };\r\n\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            autoHideDuration={4000}\r\n            open={state.open}\r\n            onClose={handleClose}\r\n            message=\"I love snacks\"\r\n            key={state.vertical + state.horizontal}\r\n        >\r\n            <Alert onClose={handleClose} severity={severity}>{message}</Alert>\r\n        </Snackbar>\r\n    )\r\n}","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\getPostById.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\post\\DetailedPost.tsx",["222"],"import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { getPostById } from '../../../api/post/getPostById';\r\nimport { useFetchReducer } from '../../../hooks/useFetch';\r\nimport { Post } from './Post'\r\nimport { Post as IPost } from '../../../types/Post';\r\nimport { isPost } from '../../../types/typeguards/Post.typeguard';\r\nimport { Box, CircularProgress } from '@material-ui/core';\r\nimport { CommentContainer } from '../comment/CommentContainer';\r\n\r\ninterface IParams {\r\n    postId: string\r\n}\r\n\r\nexport const DetailedPost: React.FC = () => {\r\n    const { postId } = useParams<IParams>()\r\n    const { successData, errorMessage, loading } = useFetchReducer({ fetchCallback: getPostById, fetchOptions: { id: postId } })\r\n\r\n    if (isPost(successData)) {\r\n        return (\r\n            <Box>\r\n                <Post post={successData} ></Post>\r\n                <CommentContainer postId={successData._id} ></CommentContainer>\r\n            </Box>\r\n        )\r\n    }\r\n\r\n    if (loading) {\r\n        return <CircularProgress></CircularProgress>\r\n    }\r\n\r\n    if (errorMessage) {\r\n        return <div>{errorMessage}</div>\r\n    }\r\n\r\n    return (\r\n        null\r\n    );\r\n}\r\n","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\Post.typeguard.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\Comment.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\PostArray.typeguard.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\CommentContainer.tsx",["223"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\comment\\createComment.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\comment\\getComments.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\CommentArray.typeguard.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\common\\OptionsMenu.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\CreateComment.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\ProfileImages.tsx",["224","225","226","227"],"import { Box, Button, Container, createStyles, IconButton, makeStyles, Theme } from '@material-ui/core'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVertOutlined';\r\nimport React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        container: {\r\n            position: 'relative'\r\n        },\r\n        coverImage: {\r\n            width: \"100%\",\r\n            minHeight: 300,\r\n            maxHeight: 450,\r\n            objectFit: \"cover\"\r\n        },\r\n        userImage: {\r\n            border: \"5px solid white\",\r\n            borderRadius: \"50%\",\r\n            position: \"absolute\",\r\n            left: \"50px\",\r\n            bottom: \"-90px\"\r\n        },\r\n        buttonHeigth: {\r\n            height: \"40px\"\r\n        },\r\n        buttonContainer: {\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            height: \"90px\"\r\n        }\r\n    })\r\n)\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nexport const ProfileImages: React.FC<Props> = ({ }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n            <Box className={classes.container} >\r\n                <img  alt=\"prop\" src=\"https://picsum.photos/600/300\" className={classes.coverImage}></img>\r\n                <img src=\"https://picsum.photos/150/180\" className={classes.userImage}></img>\r\n            </Box>\r\n            <Box className={classes.buttonContainer}>\r\n                <IconButton color=\"primary\" className={classes.buttonHeigth}>\r\n                    <MoreVertIcon></MoreVertIcon>\r\n                </IconButton>\r\n                <Button variant=\"outlined\" color=\"primary\" className={classes.buttonHeigth}> Follow</Button>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\ProfileInfo.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\user\\getUser.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\ProfilePage.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\UserSpecificPosts.tsx",["228"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\user\\getUserPosts.ts",[],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":1,"column":21,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"233","severity":1,"message":"237","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":17},{"ruleId":"229","replacedBy":"238"},{"ruleId":"231","replacedBy":"239"},{"ruleId":"233","severity":1,"message":"240","line":1,"column":8,"nodeType":"235","messageId":"236","endLine":1,"endColumn":13},{"ruleId":"233","severity":1,"message":"241","line":2,"column":17,"nodeType":"235","messageId":"236","endLine":2,"endColumn":26},{"ruleId":"233","severity":1,"message":"242","line":2,"column":28,"nodeType":"235","messageId":"236","endLine":2,"endColumn":36},{"ruleId":"233","severity":1,"message":"243","line":15,"column":13,"nodeType":"235","messageId":"236","endLine":15,"endColumn":25},{"ruleId":"233","severity":1,"message":"241","line":5,"column":17,"nodeType":"235","messageId":"236","endLine":5,"endColumn":26},{"ruleId":"233","severity":1,"message":"244","line":9,"column":10,"nodeType":"235","messageId":"236","endLine":9,"endColumn":14},{"ruleId":"233","severity":1,"message":"245","line":8,"column":10,"nodeType":"235","messageId":"236","endLine":8,"endColumn":26},{"ruleId":"233","severity":1,"message":"240","line":16,"column":8,"nodeType":"235","messageId":"236","endLine":16,"endColumn":13},{"ruleId":"233","severity":1,"message":"246","line":20,"column":10,"nodeType":"235","messageId":"236","endLine":20,"endColumn":22},{"ruleId":"233","severity":1,"message":"247","line":72,"column":23,"nodeType":"235","messageId":"236","endLine":72,"endColumn":37},{"ruleId":"229","replacedBy":"248"},{"ruleId":"231","replacedBy":"249"},{"ruleId":"233","severity":1,"message":"250","line":1,"column":27,"nodeType":"235","messageId":"236","endLine":1,"endColumn":42},{"ruleId":"233","severity":1,"message":"242","line":1,"column":28,"nodeType":"235","messageId":"236","endLine":1,"endColumn":36},{"ruleId":"233","severity":1,"message":"251","line":15,"column":8,"nodeType":"235","messageId":"236","endLine":15,"endColumn":13},{"ruleId":"233","severity":1,"message":"252","line":59,"column":11,"nodeType":"235","messageId":"236","endLine":59,"endColumn":18},{"ruleId":"253","severity":1,"message":"254","line":81,"column":8,"nodeType":"255","endLine":81,"endColumn":10,"suggestions":"256"},{"ruleId":"229","replacedBy":"257"},{"ruleId":"231","replacedBy":"258"},{"ruleId":"233","severity":1,"message":"259","line":3,"column":56,"nodeType":"235","messageId":"236","endLine":3,"endColumn":68},{"ruleId":"233","severity":1,"message":"260","line":1,"column":18,"nodeType":"235","messageId":"236","endLine":1,"endColumn":24},{"ruleId":"233","severity":1,"message":"240","line":7,"column":8,"nodeType":"235","messageId":"236","endLine":7,"endColumn":13},{"ruleId":"233","severity":1,"message":"261","line":11,"column":10,"nodeType":"235","messageId":"236","endLine":11,"endColumn":23},{"ruleId":"233","severity":1,"message":"262","line":12,"column":10,"nodeType":"235","messageId":"236","endLine":12,"endColumn":21},{"ruleId":"253","severity":1,"message":"263","line":59,"column":8,"nodeType":"255","endLine":59,"endColumn":14,"suggestions":"264"},{"ruleId":"229","replacedBy":"238"},{"ruleId":"231","replacedBy":"239"},{"ruleId":"233","severity":1,"message":"244","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":14},{"ruleId":"253","severity":1,"message":"265","line":49,"column":8,"nodeType":"255","endLine":49,"endColumn":10,"suggestions":"266"},{"ruleId":"233","severity":1,"message":"267","line":1,"column":20,"nodeType":"235","messageId":"236","endLine":1,"endColumn":34},{"ruleId":"233","severity":1,"message":"268","line":6,"column":18,"nodeType":"235","messageId":"236","endLine":6,"endColumn":23},{"ruleId":"233","severity":1,"message":"242","line":2,"column":17,"nodeType":"235","messageId":"236","endLine":2,"endColumn":25},{"ruleId":"233","severity":1,"message":"269","line":1,"column":23,"nodeType":"235","messageId":"236","endLine":1,"endColumn":32},{"ruleId":"233","severity":1,"message":"270","line":4,"column":10,"nodeType":"235","messageId":"236","endLine":4,"endColumn":19},{"ruleId":"271","severity":1,"message":"272","line":39,"column":48,"nodeType":"273","messageId":"274","endLine":39,"endColumn":51},{"ruleId":"275","severity":1,"message":"276","line":45,"column":17,"nodeType":"277","endLine":45,"endColumn":88},{"ruleId":"233","severity":1,"message":"243","line":14,"column":13,"nodeType":"235","messageId":"236","endLine":14,"endColumn":25},"no-native-reassign",["278"],"no-negated-in-lhs",["279"],"@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.",["278"],["279"],"'Axios' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'errorMessage' is assigned a value but never used.","'Post' is defined but never used.","'CommentContainer' is defined but never used.","'InitialState' is defined but never used.","'setLogginError' is assigned a value but never used.",["278"],["279"],"'combineReducers' is defined but never used.","'axios' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleSubmit' and 'onSubmit'. Either include them or remove the dependency array.","ArrayExpression",["280"],["278"],["279"],"'loginPayload' is defined but never used.","'Button' is defined but never used.","'ProfileImages' is defined but never used.","'ProfileInfo' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'logged'. Either include them or remove the dependency array.",["281"],"React Hook useEffect has missing dependencies: 'fetchCallback' and 'fetchOptions'. Either include them or remove the dependency array. If 'fetchCallback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["282"],"'SnackbarOrigin' is defined but never used.","'IPost' is defined but never used.","'Container' is defined but never used.","'useParams' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [handleSubmit, onSubmit]",{"range":"289","text":"290"},"Update the dependencies array to be: [dispatch, logged, user]",{"range":"291","text":"292"},"Update the dependencies array to be: [fetchCallback, fetchOptions]",{"range":"293","text":"294"},[2599,2601],"[handleSubmit, onSubmit]",[1973,1979],"[dispatch, logged, user]",[1379,1381],"[fetchCallback, fetchOptions]"]