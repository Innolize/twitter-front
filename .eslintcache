[{"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\reportWebVitals.ts":"1","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\App.tsx":"2","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\index.tsx":"3","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\General.tsx":"4","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\leftSidebar\\Sidebar.tsx":"5","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\CrearComentario.tsx":"6","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\post\\Post.tsx":"7","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\sign-in\\SignIn.tsx":"8","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\reducer\\index.ts":"9","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\store.ts":"10","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\index.tsx":"11","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\sign-in\\CreateAccount.tsx":"12","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\reducer\\authReducer.ts":"13","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\types\\AuthActionTypes.ts":"14","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\actions\\logginAction.ts":"15","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\leftSidebar\\ProfileButton.tsx":"16","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\MainPage.tsx":"17","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\CreateAccount.tsx":"18","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\LogIn.tsx":"19","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\common\\IAxios.ts":"20","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\getPosts.js":"21","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\hooks\\useFetch.tsx":"22","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\hooks\\useFetch.types.tsx":"23","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\createPost.ts":"24","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\common\\Snackbar.tsx":"25","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\getPostById.tsx":"26","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\post\\DetailedPost.tsx":"27","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\Post.typeguard.ts":"28","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\Comment.tsx":"29","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\PostArray.typeguard.ts":"30","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\CommentContainer.tsx":"31","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\comment\\createComment.ts":"32","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\comment\\getComments.ts":"33","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\CommentArray.typeguard.ts":"34","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\common\\OptionsMenu.tsx":"35","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\CreateComment.tsx":"36","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\ProfileImages.tsx":"37","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\ProfileInfo.tsx":"38","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\user\\getUser.ts":"39","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\ProfilePage.tsx":"40","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\UserSpecificPosts.tsx":"41","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\user\\getUserPosts.ts":"42","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\User.typeguard.ts":"43","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\likePost.ts":"44","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\EditProfilePage.tsx":"45","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\editProfile\\EditProfileButtons.tsx":"46","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\editProfile\\EditProfileInfo.tsx":"47","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\user\\updateUser.ts":"48","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\websockets\\server.ts":"49","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\post\\PostContainer.tsx":"50","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\user\\getUserLikeAvatars.ts":"51"},{"size":425,"mtime":1607391992972,"results":"52","hashOfConfig":"53"},{"size":850,"mtime":1609430743027,"results":"54","hashOfConfig":"53"},{"size":615,"mtime":1610841201790,"results":"55","hashOfConfig":"53"},{"size":1212,"mtime":1610954008974,"results":"56","hashOfConfig":"53"},{"size":2661,"mtime":1611204050833,"results":"57","hashOfConfig":"53"},{"size":3214,"mtime":1611204258205,"results":"58","hashOfConfig":"53"},{"size":5394,"mtime":1611203356639,"results":"59","hashOfConfig":"53"},{"size":4952,"mtime":1608591437336,"results":"60","hashOfConfig":"53"},{"size":221,"mtime":1608168407696,"results":"61","hashOfConfig":"53"},{"size":356,"mtime":1608148566035,"results":"62","hashOfConfig":"53"},{"size":60,"mtime":1608501449392,"results":"63","hashOfConfig":"53"},{"size":6822,"mtime":1608589280131,"results":"64","hashOfConfig":"53"},{"size":1545,"mtime":1611053045775,"results":"65","hashOfConfig":"53"},{"size":931,"mtime":1611052941292,"results":"66","hashOfConfig":"53"},{"size":1888,"mtime":1611051426068,"results":"67","hashOfConfig":"53"},{"size":1924,"mtime":1608357337140,"results":"68","hashOfConfig":"53"},{"size":2919,"mtime":1610304807689,"results":"69","hashOfConfig":"53"},{"size":223,"mtime":1608501360588,"results":"70","hashOfConfig":"53"},{"size":178,"mtime":1608501242985,"results":"71","hashOfConfig":"53"},{"size":1398,"mtime":1611202783963,"results":"72","hashOfConfig":"53"},{"size":248,"mtime":1609405485696,"results":"73","hashOfConfig":"53"},{"size":1405,"mtime":1609666541508,"results":"74","hashOfConfig":"53"},{"size":642,"mtime":1609573532100,"results":"75","hashOfConfig":"53"},{"size":576,"mtime":1611202352179,"results":"76","hashOfConfig":"53"},{"size":876,"mtime":1610591355985,"results":"77","hashOfConfig":"53"},{"size":344,"mtime":1609522162284,"results":"78","hashOfConfig":"53"},{"size":1244,"mtime":1610933150487,"results":"79","hashOfConfig":"53"},{"size":139,"mtime":1609502123725,"results":"80","hashOfConfig":"53"},{"size":2703,"mtime":1611205057083,"results":"81","hashOfConfig":"53"},{"size":151,"mtime":1609502254043,"results":"82","hashOfConfig":"53"},{"size":1396,"mtime":1610929403043,"results":"83","hashOfConfig":"53"},{"size":558,"mtime":1609587279236,"results":"84","hashOfConfig":"53"},{"size":399,"mtime":1609590441596,"results":"85","hashOfConfig":"53"},{"size":245,"mtime":1609573580702,"results":"86","hashOfConfig":"53"},{"size":1364,"mtime":1610459654991,"results":"87","hashOfConfig":"53"},{"size":1355,"mtime":1609588982231,"results":"88","hashOfConfig":"53"},{"size":5509,"mtime":1610413483280,"results":"89","hashOfConfig":"53"},{"size":1268,"mtime":1610510058445,"results":"90","hashOfConfig":"53"},{"size":259,"mtime":1609666395835,"results":"91","hashOfConfig":"53"},{"size":2708,"mtime":1610589575645,"results":"92","hashOfConfig":"53"},{"size":892,"mtime":1609673529160,"results":"93","hashOfConfig":"53"},{"size":286,"mtime":1609673573562,"results":"94","hashOfConfig":"53"},{"size":174,"mtime":1609665969362,"results":"95","hashOfConfig":"53"},{"size":283,"mtime":1609853893357,"results":"96","hashOfConfig":"53"},{"size":5646,"mtime":1610580145748,"results":"97","hashOfConfig":"53"},{"size":2248,"mtime":1610499975166,"results":"98","hashOfConfig":"53"},{"size":1654,"mtime":1610499765944,"results":"99","hashOfConfig":"53"},{"size":599,"mtime":1610510666414,"results":"100","hashOfConfig":"53"},{"size":151,"mtime":1610913438491,"results":"101","hashOfConfig":"53"},{"size":1305,"mtime":1611050467540,"results":"102","hashOfConfig":"53"},{"size":573,"mtime":1610952974937,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"12j0k8s",{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"166"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"166"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\reportWebVitals.ts",[],["234","235"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\App.tsx",["236","237"],"import { Container, Grid } from '@material-ui/core';\nimport { Sidebar } from './componentes/leftSidebar/Sidebar';\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom'\nimport { MainPage } from './screens/MainPage';\nimport { LogIn } from './screens/LogIn';\nimport { CreateAccount } from './screens/CreateAccount';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container >\n        <Router>\n          <Route path=\"/login\" exact>\n            <LogIn />\n          </Route>\n          <Route path=\"/create-account\" exact>\n            <CreateAccount />\n          </Route>\n          <Route path=\"/main\" >\n            <MainPage />\n          </Route>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/main\"></Redirect>\n          </Route>\n        </Router>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n",["238","239"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\index.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\General.tsx",["240","241","242","243","244","245"],"import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/reducer'\r\nimport { CrearComentario } from './CrearComentario'\r\nimport { Post } from './post/Post'\r\nimport { useFetchReducer } from '../../hooks/useFetch'\r\nimport { getPosts } from '../../api/post/getPosts'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport { isPostArray } from '../../types/typeguards/PostArray.typeguard'\r\nimport { PostContainer } from './post/PostContainer'\r\nimport { getUserLikeAvatars } from '../../api/user/getUserLikeAvatars'\r\n\r\n\r\nexport const General: React.FC = () => {\r\n    const user = useSelector((state: RootState) => state.authReducer.user)\r\n    const { errorMessage, loading, successData } = useFetchReducer({ fetchCallback: getPosts })\r\n\r\n    if (loading) {\r\n        return <CircularProgress />\r\n    }\r\n\r\n    if (successData) {\r\n        const posts = successData\r\n        return (\r\n            <>\r\n                { user && <CrearComentario user={user} />}\r\n                { isPostArray(posts) && <PostContainer posts={posts} ></PostContainer>}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return null\r\n\r\n}\r\n\r\n",["246","247"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\leftSidebar\\Sidebar.tsx",["248"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\CrearComentario.tsx",["249","250","251","252"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\post\\Post.tsx",["253"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\sign-in\\SignIn.tsx",["254","255","256"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useForm } from 'react-hook-form'\r\nimport Axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../redux/actions/logginAction'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { InitialState } from '../../redux/reducer/authReducer';\r\nimport { RootState } from '../../redux/reducer';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport const SignInSide = () => {\r\n  const dispatch = useDispatch()\r\n  const auth = useSelector((state: RootState) => state.authReducer)\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm()\r\n  const [logginError, setLogginError] = useState(\"\")\r\n\r\n  const onSubmit = async (data: any) => {\r\n    dispatch(login(data))\r\n  }\r\n\r\n  if (auth.user) {\r\n    return <Redirect to=\"/main\"></Redirect>\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              inputRef={register}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={register}\r\n            />\r\n            {logginError &&\r\n              <Typography variant=\"body2\" align=\"center\" color=\"secondary\">{logginError}</Typography>\r\n            }\r\n\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/create-account\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\reducer\\index.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\store.ts",["257"],"import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport reducers from './reducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nconst middlewares = [\r\n    reduxThunk\r\n]\r\n\r\nexport const store = createStore(reducers,\r\n    composeWithDevTools(applyMiddleware(...middlewares))\r\n)",["258","259"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\index.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\sign-in\\CreateAccount.tsx",["260","261","262","263"],"import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios'\r\n\r\nimport { useForm } from 'react-hook-form'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../redux/actions/logginAction';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { RootState } from '../../redux/reducer';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nexport const CreateAccount = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const auth = useSelector((state: RootState) => state.authReducer)\r\n    const classes = useStyles();\r\n    const { register, handleSubmit } = useForm<FormData>()\r\n\r\n    const onSubmit = async (data: any) => {\r\n        dispatch(login(data, { new: true }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        let listener = (e: KeyboardEvent) => {\r\n            if (e.key === \"Enter\") {\r\n                handleSubmit(onSubmit)\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"keydown\", listener)\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener)\r\n        }\r\n    }, [])\r\n\r\n    if (auth.user) {\r\n        return <Redirect to=\"/main\"></Redirect>\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"name\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                                inputRef={register}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"surname\"\r\n                                label=\"Last Name\"\r\n                                name=\"surname\"\r\n                                autoComplete=\"lname\"\r\n                                inputRef={register}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                inputRef={register}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                inputRef={register}\r\n                            />\r\n                        </Grid>\r\n                        <ul>\r\n                            {auth.errors && auth.errors.map((err, i) => <li key={i}>{err}</li>)}\r\n                        </ul>\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n          </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n              </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}",["264","265"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\reducer\\authReducer.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\types\\AuthActionTypes.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\actions\\logginAction.ts",["266"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\leftSidebar\\ProfileButton.tsx",["267"],"import { Avatar, Button, createStyles, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Menu, MenuItem, Theme } from '@material-ui/core'\r\nimport React, { useRef, useState } from 'react'\r\nimport { User } from '../../types/User'\r\nimport { LOG_OUT, } from '../../redux/types/AuthActionTypes'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        rounded: {\r\n            borderRadius: '25px'\r\n        }\r\n    })\r\n)\r\n\r\ninterface ProfileButtonProps {\r\n    user: User\r\n}\r\n\r\nexport const ProfileButton = ({ user }: ProfileButtonProps) => {\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n    const buttonRef = useRef<HTMLDivElement>(null)\r\n    const [show, setShow] = useState<boolean>(false)\r\n    const logout = () => {\r\n        dispatch({ type: LOG_OUT })\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            <ListItem button className={classes.rounded} ref={buttonRef} onClick={() => {setShow(true); console.log('no tengo que entrar aca')}}>\r\n                <ListItemAvatar>\r\n                    <Avatar src={user && user.profilePicture ? user.profilePicture : undefined}\r\n                        alt={user.name}\r\n                    ></Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={\"\" + user.name + \" \" + user.surname}\r\n                >\r\n                </ListItemText>\r\n            </ListItem>\r\n            <Menu\r\n                id=\"fade-menu\"\r\n                anchorEl={buttonRef.current}\r\n                keepMounted\r\n                open={show}\r\n                onClose={() => setShow(false)}\r\n            >\r\n                <MenuItem onClick={logout}>Log out</MenuItem>\r\n                {/* <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                <MenuItem onClick={handleClose}>Logout</MenuItem> */}\r\n            </Menu>\r\n        </List>\r\n    )\r\n\r\n}",["268","269"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\MainPage.tsx",["270","271"],"import { Box, CircularProgress, createStyles, Grid, makeStyles, Theme } from '@material-ui/core'\r\nimport { RootState } from '../redux/reducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Sidebar } from '../componentes/leftSidebar/Sidebar'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { General } from '../componentes/main'\r\nimport Axios from 'axios'\r\nimport { useEffect } from 'react'\r\nimport { handleRefreshToken } from '../redux/actions/logginAction'\r\nimport { DetailedPost } from '../componentes/main/post/DetailedPost'\r\nimport { ProfilePage } from './ProfilePage'\r\nimport { EditProfilePage } from './EditProfilePage'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        contenedorCentral: {\r\n            //chrome\r\n            '&::-webkit-scrollbar': {\r\n                width: \"6px\"\r\n            },\r\n            // \"&::-webkit-scrollbar-track\": {\r\n            //     background: \"light-blue\"\r\n            // },\r\n            '&::-webkit-scrollbar-thumb': {\r\n                backgroundColor: \"gray\",\r\n                borderRadius: \"20px\",\r\n                border: \"3px solid gray\"\r\n            },\r\n            height: \"100vh\",\r\n            overflowY: \"scroll\",\r\n            //microsoft\r\n            msOverflowStyle: \"none\",\r\n            //mozilla\r\n            scrollbarWidth: \"thin\",\r\n            scrollbarColor: \"gray transparent\",\r\n\r\n\r\n        },\r\n    })\r\n)\r\n\r\n\r\nexport const MainPage = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const { user, logged, loading } = useSelector((state: RootState) => state.authReducer)\r\n\r\n    useEffect(() => {\r\n        async function checkUser() {\r\n            if (logged === false) {\r\n                return\r\n            }\r\n            if (!user) {\r\n                dispatch(handleRefreshToken())\r\n            }\r\n        }\r\n        checkUser()\r\n    }, [user])\r\n\r\n\r\n    if (logged === false) {\r\n        return <Redirect to=\"/login\"></Redirect>\r\n    }\r\n\r\n\r\n    if (loading) {\r\n        return <CircularProgress></CircularProgress>\r\n    }\r\n\r\n    if (user) {\r\n        return (\r\n            <Box display=\"flex\" justifyContent=\"center\" >\r\n                <Sidebar />\r\n                <Grid item xs={6} className={classes.contenedorCentral}>\r\n                    <Route path=\"/main/post/:postId\" >\r\n                        <DetailedPost></DetailedPost>\r\n                    </Route>\r\n                    <Route path=\"/main/profile/:userId\" >\r\n                        <ProfilePage></ProfilePage>\r\n                    </Route>\r\n                    <Route path=\"/main/editProfile/:userId\">\r\n                        <EditProfilePage />\r\n                    </Route>\r\n                    <Route path=\"/main\" exact >\r\n                        <General />\r\n                    </Route>\r\n\r\n                </Grid>\r\n            </Box>\r\n        )\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n}\r\n","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\CreateAccount.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\LogIn.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\common\\IAxios.ts",["272"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\getPosts.js",[],["273","274"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\hooks\\useFetch.tsx",["275","276"],"import { useEffect, useReducer } from \"react\"\r\nimport { Post } from \"../types/Post\"\r\nimport { ERROR, LOADING, SUCCESS, IinitialState, actions } from './useFetch.types'\r\n\r\nconst initialState = {\r\n    successData: [],\r\n    errorMessage: [],\r\n    loading: false\r\n}\r\n\r\nconst reducer = (state: IinitialState = initialState, action: actions): IinitialState => {\r\n    switch (action.type) {\r\n\r\n        case \"SUCCESS\":\r\n            return { ...state, loading: false, successData: action.payload }\r\n\r\n        case \"ERROR\":\r\n            return { ...state, loading: false, errorMessage: [action.payload] }\r\n\r\n        case \"LOADING\":\r\n            return { ...state, loading: true }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ninterface Props {\r\n    fetchCallback: (options?: any) => Promise<any>,\r\n    fetchOptions?: any\r\n}\r\n\r\nexport const useFetchReducer = ({ fetchCallback, fetchOptions }: Props) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    useEffect(() => {\r\n        const customFecth = async () => {\r\n            dispatch({ type: LOADING })\r\n            try {\r\n                const request = (await fetchCallback(fetchOptions))\r\n                dispatch({ type: SUCCESS, payload: request })\r\n            } catch (err) {\r\n                dispatch({ type: ERROR, payload: err })\r\n            }\r\n\r\n        }\r\n        customFecth()\r\n    }, [])\r\n\r\n    return state\r\n}",["277","278"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\hooks\\useFetch.types.tsx",[],["279","280"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\createPost.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\common\\Snackbar.tsx",["281","282"],"import Snackbar, { SnackbarOrigin } from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/alert';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport interface Props {\r\n    open: boolean;\r\n    severity: \"error\" | \"success\" | \"info\" | \"warning\",\r\n    message: string\r\n    onCloseAction: () => void\r\n}\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport const PositionedSnackbar: React.FC<Props> = ({ open, severity, message, onCloseAction }) => {\r\n\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            autoHideDuration={4000}\r\n            open={open}\r\n            onClose={onCloseAction}\r\n        >\r\n            <Alert onClose={onCloseAction} severity={severity}>{message}</Alert>\r\n        </Snackbar>\r\n    )\r\n}","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\getPostById.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\post\\DetailedPost.tsx",["283"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\Post.typeguard.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\Comment.tsx",["284"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\PostArray.typeguard.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\CommentContainer.tsx",["285","286","287","288"],"import { Box, CircularProgress } from '@material-ui/core'\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport { Comment } from './Comment'\r\nimport { CreateComment } from './CreateComment'\r\nimport { RootState } from '../../../redux/reducer'\r\nimport { useSelector } from 'react-redux'\r\nimport { IComment } from '../../../types/Comment'\r\nimport { createSocket } from '../../../api/websockets/server'\r\nimport { Socket } from 'socket.io-client'\r\n\r\ninterface Props {\r\n    postId: string,\r\n    postComments: IComment[]\r\n}\r\n\r\nexport const CommentContainer: React.FC<Props> = ({ postId, postComments }) => {\r\n    const user = useSelector((state: RootState) => state.authReducer.user)\r\n    const [comments, setComments] = useState<IComment[]>(postComments)\r\n\r\n    useEffect(() => {\r\n        const socket = createSocket()\r\n        socket.emit('joinRoom', postId)\r\n        console.log('test')\r\n        socket.on('newComment', (newComment: IComment) => {\r\n            setComments(c => [...c, newComment])\r\n        })\r\n\r\n        return () => {\r\n            socket.removeAllListeners()\r\n            socket.disconnect()\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <Box>\r\n            {comments && comments.map((el, idx) => <Comment comment={el} key={idx}></Comment>)}\r\n            {user && <CreateComment postId={postId} userId={user._id}></CreateComment>}\r\n        </Box>\r\n    )\r\n}\r\n","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\comment\\createComment.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\comment\\getComments.ts",[],["289","290"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\CommentArray.typeguard.ts",[],["291","292"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\common\\OptionsMenu.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\CreateComment.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\ProfileImages.tsx",["293","294","295"],"import { Box, Button, Container, createStyles, IconButton, makeStyles, Theme } from '@material-ui/core'\r\nimport React, { useRef, useState } from 'react'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { User } from '../../types/User';\r\nimport { OptionsMenu, OptionMenuAction } from '../common/OptionsMenu';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        container: {\r\n            position: 'relative'\r\n        },\r\n        coverImageContainer: {\r\n            width: \"100%\",\r\n            minHeight: 200,\r\n            maxHeight: 450,\r\n            display: \"flex\",\r\n            justifyContent: \"center\"\r\n        },\r\n        coverImage: {\r\n            maxWidth: \"100%\",\r\n            objectFit: \"contain\",\r\n            maxHeight: 450,\r\n        },\r\n        editCoverImage: {\r\n            backgroundColor: \"black\",\r\n            opacity: \"0.5\",\r\n            position: 'absolute',\r\n            height: \"300px\",\r\n            width: \"100%\",\r\n            top: \"0px\",\r\n            // border: \"5px solid blue\",\r\n            visibility: \"hidden\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        },\r\n        userImageContainer: {\r\n            borderRadius: \"50%\",\r\n            position: \"absolute\",\r\n            left: \"30px\",\r\n            bottom: \"-90px\",\r\n            width: \"180px\",\r\n            height: \"180px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\"\r\n        },\r\n        userImage: {\r\n            borderRadius: \"50%\",\r\n            objectFit: \"cover\",\r\n            width: \"180px\",\r\n            height: \"180px\",\r\n            border: \"5px solid white\",\r\n            backgroundColor: \"gray\"\r\n        },\r\n        editUserImage: {\r\n            backgroundColor: \"black\",\r\n            opacity: \"0.5\",\r\n            position: 'absolute',\r\n            height: \"180px\",\r\n            width: \"180px\",\r\n            top: \"0px\",\r\n            borderRadius: \"50%\",\r\n            border: \"5px solid blue\",\r\n            visibility: \"hidden\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n        },\r\n        buttonHeigth: {\r\n            height: \"40px\"\r\n        },\r\n        buttonContainer: {\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            height: \"90px\"\r\n        },\r\n        visible: {\r\n            visibility: \"visible\"\r\n        }\r\n    })\r\n)\r\n\r\ninterface Props {\r\n    user: User\r\n    edit?: boolean\r\n    onClickCoverImage: () => void\r\n    onClickProfileImage: () => void\r\n}\r\n\r\nexport const ProfileImages: React.FC<Props> = ({ user, edit, onClickCoverImage, onClickProfileImage }) => {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const [showEditAvatar, setShowEditAvatar] = useState<Boolean>(false)\r\n    const [showEditCover, setShowEditCover] = useState<Boolean>(false)\r\n    const coverRef = useRef<HTMLImageElement>(null)\r\n\r\n\r\n\r\n    const hoverEnter = (setter: React.Dispatch<React.SetStateAction<Boolean>>) => {\r\n        setter(true)\r\n    }\r\n\r\n    const hoverLeaves = (setter: React.Dispatch<React.SetStateAction<Boolean>>) => {\r\n        setter(false)\r\n    }\r\n\r\n    const editProfileMenu: OptionMenuAction[] = [\r\n        { description: \"Edit Profile\", action: () => history.push(`/main/editProfile/${user._id}`) }\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.container} >\r\n                <div className={classes.coverImageContainer}>\r\n                    <img\r\n                        ref={coverRef}\r\n                        onMouseEnter={() => hoverEnter(setShowEditCover)}\r\n                        alt=\"user cover\" src={user.cover || \"https://picsum.photos/1000/500\"} className={classes.coverImage}\r\n                    />\r\n                    <div\r\n                        style={{ height: coverRef.current?.height }}\r\n                        onMouseLeave={() => hoverLeaves(setShowEditCover)}\r\n                        onClick={onClickCoverImage}\r\n                        className={`${classes.editCoverImage} ${showEditCover ? classes.visible : \"\"}`}>\r\n                        {edit ? <EditIcon fontSize=\"large\" color=\"primary\"></EditIcon> : <SearchIcon fontSize=\"large\" color=\"primary\" ></SearchIcon>}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.userImageContainer}>\r\n                    <img\r\n                        onMouseEnter={() => hoverEnter(setShowEditAvatar)}\r\n                        alt=\"user profile image\" src={user.profilePicture || \"https://picsum.photos/180/180\"} className={classes.userImage}></img>\r\n                    <div\r\n                        onClick={onClickProfileImage}\r\n                        onMouseLeave={() => hoverLeaves(setShowEditAvatar)}\r\n                        className={`${classes.editUserImage} ${showEditAvatar ? classes.visible : \"\"}`}>\r\n                        {edit ? <EditIcon fontSize=\"large\" color=\"primary\"></EditIcon> : <SearchIcon fontSize=\"large\" color=\"primary\" ></SearchIcon>}\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n            {!edit && <Box className={classes.buttonContainer}>\r\n                <OptionsMenu selfActions={editProfileMenu}></OptionsMenu>\r\n                <Button variant=\"outlined\" color=\"primary\" className={classes.buttonHeigth}> Follow</Button>\r\n            </Box>}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\ProfileInfo.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\user\\getUser.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\ProfilePage.tsx",["296"],"import { CircularProgress, createStyles, Fade, makeStyles, Modal, Theme } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getUser } from '../api/user/getUser'\r\nimport { ProfileImages } from '../componentes/profile/ProfileImages'\r\nimport { ProfileInfo } from '../componentes/profile/ProfileInfo'\r\nimport { UserSpecificPosts } from '../componentes/profile/UserSpecificPosts'\r\nimport { useFetchReducer } from '../hooks/useFetch'\r\nimport { isUser } from '../types/typeguards/User.typeguard'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        modalRoot: {\r\n            backgroundColor: \"black\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            margin: \"auto\",\r\n            height: 900,\r\n            width: 1200,\r\n            color: \"white\",\r\n        }\r\n    })\r\n)\r\n\r\ninterface IParams {\r\n    userId: string\r\n}\r\n\r\nexport const ProfilePage: React.FC = () => {\r\n    const classes = useStyles()\r\n    const { userId } = useParams<IParams>()\r\n    const [openModal, setOpenModal] = useState<boolean>(false)\r\n\r\n    const [modalImage, setModalImage] = useState<string | null>('')\r\n\r\n    const { errorMessage, loading, successData } = useFetchReducer({ fetchCallback: getUser, fetchOptions: userId })\r\n\r\n    const handleImageClick = (imageUrl: string | null) => {\r\n        setModalImage(imageUrl)\r\n        setOpenModal(true);\r\n    }\r\n\r\n    if (isUser(successData)) {\r\n        return (\r\n            <>\r\n                <ProfileImages user={successData}\r\n                    onClickCoverImage={() => handleImageClick(successData.cover)}\r\n                    onClickProfileImage={() => handleImageClick(successData.profilePicture)}\r\n                />\r\n                <ProfileInfo user={successData} />\r\n                <UserSpecificPosts userId={userId}></UserSpecificPosts>\r\n                <Modal open={openModal} onClose={() => setOpenModal(false)}>\r\n                    <Fade in={openModal}>\r\n                        <div className={classes.modalRoot}>\r\n                            <img style={{ maxWidth: \"90%\" }} src={modalImage || \"https://www.thermaxglobal.com/wp-content/uploads/2020/05/image-not-found.jpg\"}></img>\r\n                        </div>\r\n                    </Fade>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n\r\n    if (loading) {\r\n        return <CircularProgress></CircularProgress>\r\n    }\r\n\r\n    if (errorMessage) {\r\n        return <div>Hubo un error</div>\r\n    }\r\n\r\n    return null\r\n}\r\n\r\n","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\UserSpecificPosts.tsx",["297"],"import { Box, CircularProgress } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { getUserPosts } from '../../api/user/getUserPosts'\r\nimport { useFetchReducer } from '../../hooks/useFetch'\r\nimport { isPostArray } from '../../types/typeguards/PostArray.typeguard'\r\nimport { Post } from '../main/post/Post'\r\n\r\ninterface Props {\r\n    userId: string\r\n}\r\n\r\nexport const UserSpecificPosts: React.FC<Props> = ({ userId }) => {\r\n\r\n    const { errorMessage, loading, successData } = useFetchReducer({ fetchCallback: getUserPosts, fetchOptions: userId })\r\n    console.log(successData)\r\n    if (loading) {\r\n        return <CircularProgress></CircularProgress>\r\n    }\r\n\r\n    if (isPostArray(successData)) {\r\n        return (\r\n            <Box>\r\n                { successData.map((el, i) => <Post post={el} order={i} key={i} />)}\r\n\r\n            </Box>\r\n        )\r\n    }\r\n\r\n    return null\r\n}\r\n",["298","299"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\user\\getUserPosts.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\User.typeguard.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\likePost.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\EditProfilePage.tsx",["300","301","302","303","304","305","306"],"import { Box, createStyles, makeStyles, Theme } from '@material-ui/core'\r\nimport React, { MutableRefObject, useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect, useHistory, useParams } from 'react-router-dom'\r\nimport { getUser } from '../api/user/getUser'\r\nimport { EditUser } from '../api/user/updateUser'\r\n\r\nimport { EditProfileInfo } from '../componentes/profile/editProfile/EditProfileInfo'\r\nimport { ProfileImages } from '../componentes/profile/ProfileImages'\r\nimport { useFetchReducer } from '../hooks/useFetch'\r\nimport { RootState } from '../redux/reducer'\r\nimport { isUser } from '../types/typeguards/User.typeguard'\r\nimport { EditProfileButtons } from '../componentes/profile/editProfile/EditProfileButtons'\r\nimport { updateUser } from '../api/user/updateUser'\r\nimport { USER_EDITED } from '../redux/types/AuthActionTypes'\r\n\r\n\r\n\r\ninterface IParams {\r\n    userId: string\r\n}\r\n\r\nexport const EditProfilePage: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const { userId } = useParams<IParams>()\r\n\r\n    const user = useSelector((state: RootState) => state.authReducer.user)\r\n    console.log(\"redux user\", user)\r\n\r\n    //trae info de usuario de la base de datos y no del store por si el usuario cambio sus datos en otra pestaña\r\n\r\n    const { errorMessage, loading, successData } = useFetchReducer({ fetchCallback: getUser, fetchOptions: userId })\r\n\r\n    const [newCoverImage, setNewCoverImage] = useState<File | string>(\"\")\r\n    const [newProfileImage, setNewProfileImage] = useState<File | string>(\"\")\r\n    const [newBio, setNewBio] = useState<string>(\"\")\r\n    const [newName, setNewName] = useState<string>(\"\")\r\n    const [newSurname, setNewSurname] = useState<string>(\"\")\r\n\r\n    useEffect(() => {\r\n        if (isUser(successData)) {\r\n            setNewBio(successData.bio)\r\n            setNewName(successData.name)\r\n            setNewSurname(successData.surname)\r\n        }\r\n    }, [successData])\r\n\r\n    const coverImageRef = useRef() as MutableRefObject<HTMLInputElement>\r\n    const profileImageRef = useRef() as MutableRefObject<HTMLInputElement>\r\n\r\n\r\n    const removeCoverUpload = () => {\r\n        setNewCoverImage(\"\")\r\n        coverImageRef.current.value = \"\"\r\n    }\r\n\r\n    const removeProfileUpload = () => {\r\n        setNewProfileImage(\"\")\r\n        profileImageRef.current.value = \"\"\r\n    }\r\n\r\n    const onChangeBio = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setNewBio(e.target.value)\r\n    }\r\n\r\n    const onChangeCoverInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const files = e.target.files\r\n        if (files && files.length) {\r\n            setNewCoverImage(files[0])\r\n        }\r\n    }\r\n\r\n    const onChangeProfileInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const files = e.target.files\r\n        if (files && files.length) {\r\n            setNewProfileImage(files[0])\r\n        }\r\n    }\r\n\r\n    const saveUser = async () => {\r\n        const myFormData = new FormData()\r\n        myFormData.append('bio', newBio)\r\n        myFormData.append('name', newName)\r\n        myFormData.append('surname', newSurname)\r\n        if (newCoverImage) myFormData.append('cover', newCoverImage)\r\n        if (newProfileImage) myFormData.append('profile', newProfileImage)\r\n\r\n        const response = await updateUser(userId, myFormData)\r\n        dispatch({ type: USER_EDITED, payload: response })\r\n        console.log(response)\r\n        history.push(`/main/profile/${userId}`)\r\n    }\r\n\r\n    if (userId !== user?._id) {\r\n        return <Redirect to=\"/\"></Redirect>\r\n    }\r\n\r\n\r\n    if (isUser(successData)) {\r\n        return (\r\n            <>\r\n                <ProfileImages\r\n                    user={successData}\r\n                    edit={true}\r\n                    onClickCoverImage={() => coverImageRef.current.click()}\r\n                    onClickProfileImage={() => profileImageRef.current.click()}\r\n                />\r\n                <EditProfileButtons\r\n                    newCoverImage={!!newCoverImage}\r\n                    newProfileImage={!!newProfileImage}\r\n                    newCoverOnCancel={removeCoverUpload}\r\n                    newProfileOnCancel={removeProfileUpload}\r\n                    onClickCancel={\r\n                        () => history.push(`/main/profile/${userId}`)\r\n                    }\r\n                    onClickSave={saveUser}\r\n                />\r\n                <EditProfileInfo\r\n                    name={newName}\r\n                    surname={newSurname}\r\n                    bio={newBio}\r\n                    nameOnChange={(e) => setNewName(e.target.value)}\r\n                    surnameOnChange={(e) => setNewSurname(e.target.value)}\r\n                    onChangeBio={onChangeBio}\r\n                />\r\n                <HiddenInput\r\n                    customRef={coverImageRef}\r\n                    inputOnChange={onChangeCoverInput}\r\n                    id=\"cover-image\"\r\n                />\r\n                <HiddenInput\r\n                    customRef={profileImageRef}\r\n                    inputOnChange={onChangeProfileInput}\r\n                    id=\"profile-image\"\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n    return null\r\n}\r\n\r\ninterface HiddenInputProps {\r\n    customRef: React.RefObject<HTMLInputElement>\r\n    inputOnChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    id: string\r\n}\r\n\r\nconst HiddenInput: React.FC<HiddenInputProps> = ({ customRef, inputOnChange, id }) => {\r\n    return (\r\n        <input type=\"file\" style={{ display: 'none' }} id={id} ref={customRef} onChange={inputOnChange}></input>\r\n    )\r\n}","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\editProfile\\EditProfileButtons.tsx",["307","308","309"],"import React, { useState } from 'react'\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport { Box, Button, Chip, createStyles, IconButton, makeStyles, Theme } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        buttonContainer: {\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n        },\r\n        root: {\r\n            height: 90,\r\n            padding: 10\r\n        },\r\n        margin: {\r\n            margin: 5\r\n        }\r\n    })\r\n)\r\n\r\ninterface EditProfileButtonsProps {\r\n    newProfileImage: boolean\r\n    newCoverImage: boolean\r\n    newProfileOnCancel: () => void\r\n    newCoverOnCancel: () => void\r\n    onClickCancel: () => void\r\n    onClickSave: () => void\r\n}\r\n\r\nexport const EditProfileButtons: React.FC<EditProfileButtonsProps> = ({ newCoverImage, newProfileImage, newProfileOnCancel, newCoverOnCancel, onClickCancel, onClickSave }) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Box className={classes.buttonContainer}>\r\n                <Button variant=\"outlined\" color=\"secondary\" className={classes.margin} onClick={onClickCancel}>\r\n                    Cancel<CancelIcon color=\"secondary\" />\r\n                </Button>\r\n                <Button variant=\"outlined\" color=\"primary\" className={classes.margin} onClick={onClickSave}>\r\n                    Save<SaveIcon color=\"primary\" />\r\n                </Button>\r\n            </Box>\r\n            <Box className={classes.buttonContainer}>\r\n                {newProfileImage && <Chip\r\n                    color=\"primary\"\r\n                    label='new profile image!'\r\n                    icon={<NewReleasesIcon />}\r\n                    onDelete={newProfileOnCancel}\r\n                />}\r\n                {newCoverImage && <Chip\r\n                    color=\"primary\"\r\n                    label='new cover Image!'\r\n                    icon={<NewReleasesIcon />}\r\n                    onDelete={newCoverOnCancel}\r\n                />}\r\n\r\n            </Box >\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\profile\\editProfile\\EditProfileInfo.tsx",["310","311","312","313"],"import { Box, createStyles, makeStyles, TextField, Theme, Typography } from '@material-ui/core'\r\nimport CalendarTodayOutlinedIcon from '@material-ui/icons/CalendarTodayOutlined';\r\nimport React, { useState } from 'react'\r\nimport { User } from '../../../types/User'\r\nimport moment from 'moment'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        container: {\r\n            '& *': {\r\n                padding: \"5px\"\r\n            },\r\n        },\r\n        header: {\r\n            textTransform: \"capitalize\",\r\n        }\r\n    })\r\n)\r\n\r\ninterface Props {\r\n    bio: string\r\n    name: string\r\n    surname: string\r\n    nameOnChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    surnameOnChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n    onChangeBio: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const EditProfileInfo: React.FC<Props> = ({ name, surname, bio, onChangeBio, nameOnChange, surnameOnChange }) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\" className={classes.container}>\r\n            <Typography variant=\"h5\" className={classes.header}>{name} {surname}</Typography>\r\n            <TextField variant=\"outlined\" value={name} onChange={nameOnChange} label=\"name\"></TextField>\r\n            <TextField variant=\"outlined\" value={surname} onChange={surnameOnChange} label=\"surname\"></TextField>\r\n            <TextField\r\n                label=\"bio\"\r\n                variant=\"outlined\"\r\n                value={bio || \"\"}\r\n                onChange={onChangeBio}\r\n                multiline\r\n            ></TextField>\r\n        </Box>\r\n    )\r\n}\r\n","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\user\\updateUser.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\websockets\\server.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\post\\PostContainer.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\user\\getUserLikeAvatars.ts",[],{"ruleId":"314","replacedBy":"315"},{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","severity":1,"message":"319","line":1,"column":21,"nodeType":"320","messageId":"321","endLine":1,"endColumn":25},{"ruleId":"318","severity":1,"message":"322","line":2,"column":10,"nodeType":"320","messageId":"321","endLine":2,"endColumn":17},{"ruleId":"314","replacedBy":"323"},{"ruleId":"316","replacedBy":"324"},{"ruleId":"318","severity":1,"message":"325","line":1,"column":8,"nodeType":"320","messageId":"321","endLine":1,"endColumn":13},{"ruleId":"318","severity":1,"message":"326","line":2,"column":17,"nodeType":"320","messageId":"321","endLine":2,"endColumn":26},{"ruleId":"318","severity":1,"message":"327","line":2,"column":28,"nodeType":"320","messageId":"321","endLine":2,"endColumn":36},{"ruleId":"318","severity":1,"message":"328","line":6,"column":10,"nodeType":"320","messageId":"321","endLine":6,"endColumn":14},{"ruleId":"318","severity":1,"message":"329","line":12,"column":10,"nodeType":"320","messageId":"321","endLine":12,"endColumn":28},{"ruleId":"318","severity":1,"message":"330","line":17,"column":13,"nodeType":"320","messageId":"321","endLine":17,"endColumn":25},{"ruleId":"314","replacedBy":"331"},{"ruleId":"316","replacedBy":"332"},{"ruleId":"318","severity":1,"message":"333","line":10,"column":8,"nodeType":"320","messageId":"321","endLine":10,"endColumn":18},{"ruleId":"318","severity":1,"message":"334","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":17},{"ruleId":"318","severity":1,"message":"335","line":3,"column":8,"nodeType":"320","messageId":"321","endLine":3,"endColumn":19},{"ruleId":"318","severity":1,"message":"326","line":5,"column":17,"nodeType":"320","messageId":"321","endLine":5,"endColumn":26},{"ruleId":"318","severity":1,"message":"328","line":9,"column":10,"nodeType":"320","messageId":"321","endLine":9,"endColumn":14},{"ruleId":"336","severity":1,"message":"337","line":77,"column":8,"nodeType":"338","endLine":77,"endColumn":10,"suggestions":"339"},{"ruleId":"318","severity":1,"message":"325","line":16,"column":8,"nodeType":"320","messageId":"321","endLine":16,"endColumn":13},{"ruleId":"318","severity":1,"message":"340","line":20,"column":10,"nodeType":"320","messageId":"321","endLine":20,"endColumn":22},{"ruleId":"318","severity":1,"message":"341","line":72,"column":23,"nodeType":"320","messageId":"321","endLine":72,"endColumn":37},{"ruleId":"318","severity":1,"message":"342","line":1,"column":27,"nodeType":"320","messageId":"321","endLine":1,"endColumn":42},{"ruleId":"314","replacedBy":"343"},{"ruleId":"316","replacedBy":"344"},{"ruleId":"318","severity":1,"message":"327","line":1,"column":28,"nodeType":"320","messageId":"321","endLine":1,"endColumn":36},{"ruleId":"318","severity":1,"message":"345","line":15,"column":8,"nodeType":"320","messageId":"321","endLine":15,"endColumn":13},{"ruleId":"318","severity":1,"message":"346","line":59,"column":11,"nodeType":"320","messageId":"321","endLine":59,"endColumn":18},{"ruleId":"336","severity":1,"message":"347","line":81,"column":8,"nodeType":"338","endLine":81,"endColumn":10,"suggestions":"348"},{"ruleId":"314","replacedBy":"349"},{"ruleId":"316","replacedBy":"350"},{"ruleId":"318","severity":1,"message":"351","line":3,"column":56,"nodeType":"320","messageId":"321","endLine":3,"endColumn":68},{"ruleId":"318","severity":1,"message":"352","line":1,"column":18,"nodeType":"320","messageId":"321","endLine":1,"endColumn":24},{"ruleId":"314","replacedBy":"353"},{"ruleId":"316","replacedBy":"354"},{"ruleId":"318","severity":1,"message":"325","line":7,"column":8,"nodeType":"320","messageId":"321","endLine":7,"endColumn":13},{"ruleId":"336","severity":1,"message":"355","line":58,"column":8,"nodeType":"338","endLine":58,"endColumn":14,"suggestions":"356"},{"ruleId":"318","severity":1,"message":"357","line":2,"column":10,"nodeType":"320","messageId":"321","endLine":2,"endColumn":28},{"ruleId":"314","replacedBy":"323"},{"ruleId":"316","replacedBy":"324"},{"ruleId":"318","severity":1,"message":"328","line":2,"column":10,"nodeType":"320","messageId":"321","endLine":2,"endColumn":14},{"ruleId":"336","severity":1,"message":"358","line":49,"column":8,"nodeType":"338","endLine":49,"endColumn":10,"suggestions":"359"},{"ruleId":"314","replacedBy":"360"},{"ruleId":"316","replacedBy":"361"},{"ruleId":"314","replacedBy":"362"},{"ruleId":"316","replacedBy":"363"},{"ruleId":"318","severity":1,"message":"364","line":1,"column":20,"nodeType":"320","messageId":"321","endLine":1,"endColumn":34},{"ruleId":"318","severity":1,"message":"327","line":3,"column":10,"nodeType":"320","messageId":"321","endLine":3,"endColumn":18},{"ruleId":"318","severity":1,"message":"365","line":6,"column":18,"nodeType":"320","messageId":"321","endLine":6,"endColumn":23},{"ruleId":"318","severity":1,"message":"366","line":36,"column":12,"nodeType":"320","messageId":"321","endLine":36,"endColumn":23},{"ruleId":"318","severity":1,"message":"367","line":1,"column":15,"nodeType":"320","messageId":"321","endLine":1,"endColumn":31},{"ruleId":"318","severity":1,"message":"368","line":2,"column":17,"nodeType":"320","messageId":"321","endLine":2,"endColumn":28},{"ruleId":"318","severity":1,"message":"369","line":9,"column":10,"nodeType":"320","messageId":"321","endLine":9,"endColumn":16},{"ruleId":"336","severity":1,"message":"370","line":32,"column":8,"nodeType":"338","endLine":32,"endColumn":10,"suggestions":"371"},{"ruleId":"314","replacedBy":"372"},{"ruleId":"316","replacedBy":"373"},{"ruleId":"314","replacedBy":"374"},{"ruleId":"316","replacedBy":"375"},{"ruleId":"318","severity":1,"message":"376","line":1,"column":23,"nodeType":"320","messageId":"321","endLine":1,"endColumn":32},{"ruleId":"318","severity":1,"message":"377","line":1,"column":48,"nodeType":"320","messageId":"321","endLine":1,"endColumn":58},{"ruleId":"378","severity":1,"message":"379","line":132,"column":21,"nodeType":"380","endLine":134,"endColumn":141},{"ruleId":"381","severity":1,"message":"382","line":61,"column":29,"nodeType":"380","endLine":61,"endColumn":161},{"ruleId":"318","severity":1,"message":"330","line":14,"column":13,"nodeType":"320","messageId":"321","endLine":14,"endColumn":25},{"ruleId":"314","replacedBy":"383"},{"ruleId":"316","replacedBy":"384"},{"ruleId":"318","severity":1,"message":"385","line":1,"column":10,"nodeType":"320","messageId":"321","endLine":1,"endColumn":13},{"ruleId":"318","severity":1,"message":"386","line":1,"column":15,"nodeType":"320","messageId":"321","endLine":1,"endColumn":27},{"ruleId":"318","severity":1,"message":"387","line":1,"column":29,"nodeType":"320","messageId":"321","endLine":1,"endColumn":39},{"ruleId":"318","severity":1,"message":"388","line":1,"column":41,"nodeType":"320","messageId":"321","endLine":1,"endColumn":46},{"ruleId":"318","severity":1,"message":"389","line":6,"column":10,"nodeType":"320","messageId":"321","endLine":6,"endColumn":18},{"ruleId":"318","severity":1,"message":"330","line":33,"column":13,"nodeType":"320","messageId":"321","endLine":33,"endColumn":25},{"ruleId":"318","severity":1,"message":"390","line":33,"column":27,"nodeType":"320","messageId":"321","endLine":33,"endColumn":34},{"ruleId":"318","severity":1,"message":"327","line":1,"column":17,"nodeType":"320","messageId":"321","endLine":1,"endColumn":25},{"ruleId":"318","severity":1,"message":"377","line":5,"column":43,"nodeType":"320","messageId":"321","endLine":5,"endColumn":53},{"ruleId":"318","severity":1,"message":"391","line":6,"column":8,"nodeType":"320","messageId":"321","endLine":6,"endColumn":18},{"ruleId":"318","severity":1,"message":"392","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":33},{"ruleId":"318","severity":1,"message":"327","line":3,"column":17,"nodeType":"320","messageId":"321","endLine":3,"endColumn":25},{"ruleId":"318","severity":1,"message":"393","line":4,"column":10,"nodeType":"320","messageId":"321","endLine":4,"endColumn":14},{"ruleId":"318","severity":1,"message":"394","line":5,"column":8,"nodeType":"320","messageId":"321","endLine":5,"endColumn":14},"no-native-reassign",["395"],"no-negated-in-lhs",["396"],"@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.",["395"],["396"],"'Axios' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Post' is defined but never used.","'getUserLikeAvatars' is defined but never used.","'errorMessage' is assigned a value but never used.",["395"],["396"],"'DraftsIcon' is defined but never used.","'PhotoIcon' is defined but never used.","'YouTubeIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'post.likesArr'. Either include it or remove the dependency array.","ArrayExpression",["397"],"'InitialState' is defined but never used.","'setLogginError' is assigned a value but never used.","'combineReducers' is defined but never used.",["395"],["396"],"'axios' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleSubmit' and 'onSubmit'. Either include them or remove the dependency array.",["398"],["395"],["396"],"'loginPayload' is defined but never used.","'Button' is defined but never used.",["395"],["396"],"React Hook useEffect has missing dependencies: 'dispatch' and 'logged'. Either include them or remove the dependency array.",["399"],"'handleRefreshToken' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchCallback' and 'fetchOptions'. Either include them or remove the dependency array. If 'fetchCallback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["400"],["395"],["396"],["395"],["396"],"'SnackbarOrigin' is defined but never used.","'IPost' is defined but never used.","'showOptions' is assigned a value but never used.","'CircularProgress' is defined but never used.","'useCallback' is defined but never used.","'Socket' is defined but never used.","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.",["401"],["395"],["396"],["395"],["396"],"'Container' is defined but never used.","'IconButton' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["395"],["396"],"'Box' is defined but never used.","'createStyles' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'EditUser' is defined but never used.","'loading' is assigned a value but never used.","'DeleteIcon' is defined but never used.","'CalendarTodayOutlinedIcon' is defined but never used.","'User' is defined but never used.","'moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},"Update the dependencies array to be: [post.likesArr]",{"range":"412","text":"413"},"Update the dependencies array to be: [handleSubmit, onSubmit]",{"range":"414","text":"415"},"Update the dependencies array to be: [dispatch, logged, user]",{"range":"416","text":"417"},"Update the dependencies array to be: [fetchCallback, fetchOptions]",{"range":"418","text":"419"},"Update the dependencies array to be: [postId]",{"range":"420","text":"421"},[2660,2662],"[post.likesArr]",[2599,2601],"[handleSubmit, onSubmit]",[1890,1896],"[dispatch, logged, user]",[1379,1381],"[fetchCallback, fetchOptions]",[1144,1146],"[postId]"]