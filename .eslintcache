[{"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\reportWebVitals.ts":"1","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\App.tsx":"2","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\index.tsx":"3","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\General.tsx":"4","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\leftSidebar\\Sidebar.tsx":"5","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\CrearComentario.tsx":"6","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\post\\Post.tsx":"7","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\sign-in\\SignIn.tsx":"8","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\reducer\\index.ts":"9","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\store.ts":"10","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\index.tsx":"11","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\sign-in\\CreateAccount.tsx":"12","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\reducer\\authReducer.ts":"13","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\types\\AuthActionTypes.ts":"14","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\actions\\logginAction.ts":"15","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\leftSidebar\\ProfileButton.tsx":"16","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\MainPage.tsx":"17","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\CreateAccount.tsx":"18","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\LogIn.tsx":"19","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\common\\IAxios.ts":"20","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\getPosts.js":"21","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\hooks\\useFetch.tsx":"22","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\hooks\\useFetch.types.tsx":"23","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\createPost.ts":"24","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\common\\Snackbar.tsx":"25","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\getPostById.tsx":"26","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\post\\DetailedPost.tsx":"27","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\Post.typeguard.ts":"28","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\Comment.tsx":"29","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\PostArray.typeguard.ts":"30","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\CommentContainer.tsx":"31"},{"size":425,"mtime":1607391992972,"results":"32","hashOfConfig":"33"},{"size":850,"mtime":1609430743027,"results":"34","hashOfConfig":"33"},{"size":614,"mtime":1607788548419,"results":"35","hashOfConfig":"33"},{"size":994,"mtime":1609503659795,"results":"36","hashOfConfig":"33"},{"size":2219,"mtime":1609313977051,"results":"37","hashOfConfig":"33"},{"size":3332,"mtime":1609442813249,"results":"38","hashOfConfig":"33"},{"size":2439,"mtime":1609505763539,"results":"39","hashOfConfig":"33"},{"size":4952,"mtime":1608591437336,"results":"40","hashOfConfig":"33"},{"size":221,"mtime":1608168407696,"results":"41","hashOfConfig":"33"},{"size":356,"mtime":1608148566035,"results":"42","hashOfConfig":"33"},{"size":60,"mtime":1608501449392,"results":"43","hashOfConfig":"33"},{"size":6822,"mtime":1608589280131,"results":"44","hashOfConfig":"33"},{"size":1264,"mtime":1609243586260,"results":"45","hashOfConfig":"33"},{"size":789,"mtime":1608898052600,"results":"46","hashOfConfig":"33"},{"size":1842,"mtime":1609332484303,"results":"47","hashOfConfig":"33"},{"size":1924,"mtime":1608357337140,"results":"48","hashOfConfig":"33"},{"size":2542,"mtime":1609431678084,"results":"49","hashOfConfig":"33"},{"size":223,"mtime":1608501360588,"results":"50","hashOfConfig":"33"},{"size":178,"mtime":1608501242985,"results":"51","hashOfConfig":"33"},{"size":525,"mtime":1609406537063,"results":"52","hashOfConfig":"33"},{"size":248,"mtime":1609405485696,"results":"53","hashOfConfig":"33"},{"size":1486,"mtime":1609502781453,"results":"54","hashOfConfig":"33"},{"size":549,"mtime":1609502799847,"results":"55","hashOfConfig":"33"},{"size":454,"mtime":1609442662922,"results":"56","hashOfConfig":"33"},{"size":1140,"mtime":1609429342425,"results":"57","hashOfConfig":"33"},{"size":375,"mtime":1609439276820,"results":"58","hashOfConfig":"33"},{"size":965,"mtime":1609503750317,"results":"59","hashOfConfig":"33"},{"size":139,"mtime":1609502123725,"results":"60","hashOfConfig":"33"},{"size":2598,"mtime":1609506377251,"results":"61","hashOfConfig":"33"},{"size":151,"mtime":1609502254043,"results":"62","hashOfConfig":"33"},{"size":477,"mtime":1609507462632,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"12j0k8s",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\reportWebVitals.ts",[],["144","145"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\App.tsx",["146","147"],"import { Container, Grid } from '@material-ui/core';\nimport { Sidebar } from './componentes/leftSidebar/Sidebar';\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom'\nimport { MainPage } from './screens/MainPage';\nimport { LogIn } from './screens/LogIn';\nimport { CreateAccount } from './screens/CreateAccount';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container >\n        <Router>\n          <Route path=\"/login\" exact>\n            <LogIn />\n          </Route>\n          <Route path=\"/create-account\" exact>\n            <CreateAccount />\n          </Route>\n          <Route path=\"/main\" >\n            <MainPage />\n          </Route>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/main\"></Redirect>\n          </Route>\n        </Router>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n",["148","149"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\index.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\General.tsx",["150","151","152","153"],"import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/reducer'\r\nimport { CrearComentario } from './CrearComentario'\r\nimport { Post } from './post/Post'\r\nimport { useFetchReducer } from '../../hooks/useFetch'\r\nimport { getPosts } from '../../api/post/getPosts'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport { isPostArray } from '../../types/typeguards/PostArray.typeguard'\r\n\r\n\r\nexport const General: React.FC = () => {\r\n    const user = useSelector((state: RootState) => state.authReducer.user)\r\n    const { errorMessage, loading, successData } = useFetchReducer({ fetchCallback: getPosts })\r\n\r\n    return (\r\n        <>\r\n            {user && <CrearComentario user={user} />}\r\n            {loading && <CircularProgress />}\r\n            {successData && isPostArray(successData) && successData.map((el, i) => <Post post={el} order={i} key={i} />)}\r\n        </>\r\n    );\r\n}\r\n\r\n",["154","155"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\leftSidebar\\Sidebar.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\CrearComentario.tsx",["156","157"],"import { Avatar, Box, Button, createStyles, Input, makeStyles, Theme } from '@material-ui/core';\r\nimport PhotoIcon from '@material-ui/icons/Photo'\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { User } from '../../types/User';\r\nimport { createPost } from '../../api/post/createPost';\r\nimport { PositionedSnackbar } from '../common/Snackbar'\r\nimport { Post } from '../../types/Post';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        large: {\r\n            width: theme.spacing(7),\r\n            height: theme.spacing(7),\r\n            margin: \"20px 10px 20px 10px\"\r\n        },\r\n        textField: {\r\n            margin: \"10px 10px 10px 10px\",\r\n            width: \"90%\"\r\n        },\r\n        root: {\r\n            display: \"flex\",\r\n            padding: 10,\r\n            margin: 20,\r\n            border: \"solid #E1E8ED 1px\"\r\n        },\r\n        contenedorMultimedia: {\r\n            flexGrow: 1\r\n        },\r\n        contenedorBotones: {\r\n            display: \"flex\",\r\n            width: \"90%\",\r\n            alignItems: \"center\"\r\n        }\r\n    }),\r\n);\r\n\r\ninterface Props {\r\n    user: User\r\n}\r\n\r\nexport const CrearComentario: React.FC<Props> = ({ user }) => {\r\n    const [postContent, setPostContent] = useState(\"\")\r\n    const [error, setError] = useState<string>(\"\")\r\n    const [success, setSuccess] = useState<any>(null)\r\n    const classes = useStyles()\r\n\r\n    const inputOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPostContent(e.target.value)\r\n    }\r\n\r\n    const sendNewPost = async () => {\r\n        const { success, response, error } = await createPost(postContent)\r\n        if (success) {\r\n            setSuccess(response)\r\n            setPostContent(\"\")\r\n        } else if (error) {\r\n            setError(error)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.root}>\r\n                <Avatar alt=\"carlitos test\" src={user.profilePicture || undefined} className={classes.large}></Avatar>\r\n                <Box style={{ width: \"90%\" }}>\r\n                    <Input placeholder=\"Que querés compartir hoy?\" className={classes.textField} value={postContent} onChange={inputOnChange} />\r\n                    <Box className={classes.contenedorBotones} id=\"contenedor-botones\" >\r\n                        <Box style={{ flexGrow: 1 }} id=\"contenedor-multimedia\">\r\n                            <PhotoIcon fontSize=\"large\" />\r\n                            <YouTubeIcon fontSize=\"large\" />\r\n                        </Box>\r\n\r\n                        <Button\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            endIcon={<SendIcon />}\r\n                            onClick={sendNewPost}\r\n                        >\r\n                            Enviar\r\n                    </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n            {success && <PositionedSnackbar open={true} severity=\"success\" message=\"Posted successfuly!\"></PositionedSnackbar>}\r\n            {error && <PositionedSnackbar open={true} severity=\"error\" message={error || \"error\"}></PositionedSnackbar>}\r\n        </>\r\n    );\r\n}","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\post\\Post.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\sign-in\\SignIn.tsx",["158","159","160"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useForm } from 'react-hook-form'\r\nimport Axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../redux/actions/logginAction'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { InitialState } from '../../redux/reducer/authReducer';\r\nimport { RootState } from '../../redux/reducer';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport const SignInSide = () => {\r\n  const dispatch = useDispatch()\r\n  const auth = useSelector((state: RootState) => state.authReducer)\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm()\r\n  const [logginError, setLogginError] = useState(\"\")\r\n\r\n  const onSubmit = async (data: any) => {\r\n    dispatch(login(data))\r\n  }\r\n\r\n  if (auth.user) {\r\n    return <Redirect to=\"/main\"></Redirect>\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              inputRef={register}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={register}\r\n            />\r\n            {logginError &&\r\n              <Typography variant=\"body2\" align=\"center\" color=\"secondary\">{logginError}</Typography>\r\n            }\r\n\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/create-account\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}",["161","162"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\reducer\\index.ts",[],["163","164"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\store.ts",["165"],"import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport reducers from './reducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nconst middlewares = [\r\n    reduxThunk\r\n]\r\n\r\nexport const store = createStore(reducers,\r\n    composeWithDevTools(applyMiddleware(...middlewares))\r\n)","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\index.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\sign-in\\CreateAccount.tsx",["166","167","168","169"],"import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios'\r\n\r\nimport { useForm } from 'react-hook-form'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../redux/actions/logginAction';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { RootState } from '../../redux/reducer';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nexport const CreateAccount = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const auth = useSelector((state: RootState) => state.authReducer)\r\n    const classes = useStyles();\r\n    const { register, handleSubmit } = useForm<FormData>()\r\n\r\n    const onSubmit = async (data: any) => {\r\n        dispatch(login(data, { new: true }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        let listener = (e: KeyboardEvent) => {\r\n            if (e.key === \"Enter\") {\r\n                handleSubmit(onSubmit)\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"keydown\", listener)\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener)\r\n        }\r\n    }, [])\r\n\r\n    if (auth.user) {\r\n        return <Redirect to=\"/main\"></Redirect>\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"name\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"name\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                                inputRef={register}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"surname\"\r\n                                label=\"Last Name\"\r\n                                name=\"surname\"\r\n                                autoComplete=\"lname\"\r\n                                inputRef={register}\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                inputRef={register}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                inputRef={register}\r\n                            />\r\n                        </Grid>\r\n                        <ul>\r\n                            {auth.errors && auth.errors.map((err, i) => <li key={i}>{err}</li>)}\r\n                        </ul>\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n          </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n              </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\reducer\\authReducer.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\types\\AuthActionTypes.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\redux\\actions\\logginAction.ts",["170"],"import { Dispatch } from 'react'\r\nimport { User } from '../../types/User'\r\nimport { AuthActionTypes, LOGIN, LOADING, LOGIN_ERROR, loginPayload } from '../types/AuthActionTypes'\r\nimport { InitialState } from '../reducer/authReducer'\r\nimport { axiosI } from '../../common/IAxios'\r\n\r\ninterface logInfo {\r\n    email: string\r\n    password: string\r\n    name?: string\r\n    surname?: string\r\n}\r\n\r\ninterface NewAccount {\r\n    new: boolean\r\n}\r\n\r\nexport const login = (data: logInfo, newAccount?: NewAccount) => async (dispatch: Dispatch<AuthActionTypes>, getState: () => InitialState) => {\r\n    try {\r\n        dispatch({ type: LOADING })\r\n\r\n        if (newAccount) {\r\n            await axiosI.post('/user', data, { withCredentials: true })\r\n        }\r\n        const loggear = (await axiosI.post('/auth', data, { withCredentials: true })).data\r\n\r\n        dispatch({ type: LOGIN, payload: loggear })\r\n    } catch (error) {\r\n        if (error.response) {\r\n            let errors = error.response.data.message\r\n            dispatch({ type: LOGIN_ERROR, payload: { errors: errors } })\r\n        }\r\n    }\r\n}\r\n\r\ninterface RefreshReponse {\r\n    user: User,\r\n    message?: string,\r\n    access_token: string\r\n}\r\n\r\nexport const handleRefreshToken = () => async (dispatch: Dispatch<AuthActionTypes>) => {\r\n\r\n    try {\r\n        dispatch({ type: LOADING })\r\n        const loggear: RefreshReponse = (await axiosI.post('/auth/refresh', { withCredentials: true })).data\r\n        if (loggear.access_token) {\r\n            dispatch({ type: LOGIN, payload: { user: loggear.user, access_token: loggear.access_token } })\r\n        } else {\r\n            dispatch({ type: LOGIN_ERROR, payload: { errors: [loggear.message ? loggear.message : 'loggin error'] } })\r\n        }\r\n    } catch (err) {\r\n        dispatch({ type: LOGIN_ERROR, payload: { errors: [\"error \"] } })\r\n    }\r\n\r\n}",["171","172"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\leftSidebar\\ProfileButton.tsx",["173"],"import { Avatar, Button, createStyles, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Menu, MenuItem, Theme } from '@material-ui/core'\r\nimport React, { useRef, useState } from 'react'\r\nimport { User } from '../../types/User'\r\nimport { LOG_OUT, } from '../../redux/types/AuthActionTypes'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        rounded: {\r\n            borderRadius: '25px'\r\n        }\r\n    })\r\n)\r\n\r\ninterface ProfileButtonProps {\r\n    user: User\r\n}\r\n\r\nexport const ProfileButton = ({ user }: ProfileButtonProps) => {\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles()\r\n    const buttonRef = useRef<HTMLDivElement>(null)\r\n    const [show, setShow] = useState<boolean>(false)\r\n    const logout = () => {\r\n        dispatch({ type: LOG_OUT })\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            <ListItem button className={classes.rounded} ref={buttonRef} onClick={() => {setShow(true); console.log('no tengo que entrar aca')}}>\r\n                <ListItemAvatar>\r\n                    <Avatar src={user && user.profilePicture ? user.profilePicture : undefined}\r\n                        alt={user.name}\r\n                    ></Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={\"\" + user.name + \" \" + user.surname}\r\n                >\r\n                </ListItemText>\r\n            </ListItem>\r\n            <Menu\r\n                id=\"fade-menu\"\r\n                anchorEl={buttonRef.current}\r\n                keepMounted\r\n                open={show}\r\n                onClose={() => setShow(false)}\r\n            >\r\n                <MenuItem onClick={logout}>Log out</MenuItem>\r\n                {/* <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                <MenuItem onClick={handleClose}>Logout</MenuItem> */}\r\n            </Menu>\r\n        </List>\r\n    )\r\n\r\n}",["174","175"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\MainPage.tsx",["176","177"],"import { Box, CircularProgress, createStyles, Grid, makeStyles, Theme } from '@material-ui/core'\r\nimport { RootState } from '../redux/reducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Sidebar } from '../componentes/leftSidebar/Sidebar'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { General } from '../componentes/main'\r\nimport Axios from 'axios'\r\nimport { useEffect } from 'react'\r\nimport { handleRefreshToken } from '../redux/actions/logginAction'\r\nimport { DetailedPost } from '../componentes/main/post/DetailedPost'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        contenedorCentral: {\r\n            //chrome\r\n            '&::-webkit-scrollbar': {\r\n                width: \"6px\"\r\n            },\r\n            // \"&::-webkit-scrollbar-track\": {\r\n            //     background: \"light-blue\"\r\n            // },\r\n            '&::-webkit-scrollbar-thumb': {\r\n                backgroundColor: \"gray\",\r\n                borderRadius: \"20px\",\r\n                border: \"3px solid gray\"\r\n            },\r\n            height: \"100vh\",\r\n            overflowY: \"scroll\",\r\n            //microsoft\r\n            msOverflowStyle: \"none\",\r\n            //mozilla\r\n            scrollbarWidth: \"thin\",\r\n            scrollbarColor: \"gray transparent\",\r\n\r\n\r\n        },\r\n    })\r\n)\r\n\r\n\r\nexport const MainPage = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const { user, logged, loading } = useSelector((state: RootState) => state.authReducer)\r\n\r\n    useEffect(() => {\r\n        async function checkUser() {\r\n            if (logged === false) {\r\n                return\r\n            }\r\n            if (!user) {\r\n                dispatch(handleRefreshToken())\r\n            }\r\n        }\r\n        checkUser()\r\n    }, [user])\r\n\r\n\r\n    if (logged === false) {\r\n        return <Redirect to=\"/login\"></Redirect>\r\n    }\r\n\r\n\r\n    if (loading) {\r\n        return <CircularProgress></CircularProgress>\r\n    }\r\n\r\n    if (user) {\r\n        return (\r\n            <Box display=\"flex\" justifyContent=\"center\" >\r\n                <Sidebar />\r\n                <Grid item xs={6} className={classes.contenedorCentral}>\r\n                    <Route path=\"/main/post/:postId\" >\r\n                        <DetailedPost></DetailedPost>\r\n                    </Route>\r\n                    <Route path=\"/main\" exact >\r\n                        <General />\r\n                    </Route>\r\n\r\n                </Grid>\r\n            </Box>\r\n        )\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n}\r\n","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\CreateAccount.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\screens\\LogIn.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\common\\IAxios.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\getPosts.js",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\hooks\\useFetch.tsx",["178","179"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\hooks\\useFetch.types.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\createPost.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\common\\Snackbar.tsx",["180"],"import Snackbar, { SnackbarOrigin } from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/alert';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport interface Props {\r\n    open: boolean;\r\n    severity: \"error\" | \"success\" | \"info\" | \"warning\",\r\n    message: string\r\n}\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport const PositionedSnackbar: React.FC<Props> = ({ open, severity, message }) => {\r\n    const [state, setState] = useState({\r\n        open: open,\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n    });\r\n\r\n    const handleClose = () => {\r\n        setState({ ...state, open: false });\r\n    };\r\n\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n            autoHideDuration={4000}\r\n            open={state.open}\r\n            onClose={handleClose}\r\n            message=\"I love snacks\"\r\n            key={state.vertical + state.horizontal}\r\n        >\r\n            <Alert onClose={handleClose} severity={severity}>{message}</Alert>\r\n        </Snackbar>\r\n    )\r\n}","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\api\\post\\getPostById.tsx",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\post\\DetailedPost.tsx",["181"],"import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { getPostById } from '../../../api/post/getPostById';\r\nimport { useFetchReducer } from '../../../hooks/useFetch';\r\nimport { Post } from './Post'\r\nimport { Post as IPost } from '../../../types/Post';\r\nimport { isPost } from '../../../types/typeguards/Post.typeguard';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\ninterface IParams {\r\n    postId: string\r\n}\r\n\r\nexport const DetailedPost: React.FC = () => {\r\n    const { postId } = useParams<IParams>()\r\n    const { successData, errorMessage, loading } = useFetchReducer({ fetchCallback: getPostById, fetchOptions: { id: postId } })\r\n\r\n    if (isPost(successData)) {\r\n        return <Post post={successData} ></Post>\r\n    }\r\n\r\n    if (loading) {\r\n        return <CircularProgress></CircularProgress>\r\n    }\r\n\r\n    if (errorMessage) {\r\n        return <div>{errorMessage}</div>\r\n    }\r\n\r\n    return (\r\n        null\r\n    );\r\n}\r\n","C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\Post.typeguard.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\Comment.tsx",["182","183"],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\types\\typeguards\\PostArray.typeguard.ts",[],"C:\\Users\\Kuppa\\Documents\\React\\twitter-front\\src\\componentes\\main\\comment\\CommentContainer.tsx",["184","185","186"],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":21,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"195","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":17},{"ruleId":"187","replacedBy":"196"},{"ruleId":"189","replacedBy":"197"},{"ruleId":"191","severity":1,"message":"198","line":1,"column":8,"nodeType":"193","messageId":"194","endLine":1,"endColumn":13},{"ruleId":"191","severity":1,"message":"199","line":2,"column":17,"nodeType":"193","messageId":"194","endLine":2,"endColumn":26},{"ruleId":"191","severity":1,"message":"200","line":2,"column":28,"nodeType":"193","messageId":"194","endLine":2,"endColumn":36},{"ruleId":"191","severity":1,"message":"201","line":15,"column":13,"nodeType":"193","messageId":"194","endLine":15,"endColumn":25},{"ruleId":"187","replacedBy":"202"},{"ruleId":"189","replacedBy":"203"},{"ruleId":"191","severity":1,"message":"199","line":5,"column":17,"nodeType":"193","messageId":"194","endLine":5,"endColumn":26},{"ruleId":"191","severity":1,"message":"204","line":9,"column":10,"nodeType":"193","messageId":"194","endLine":9,"endColumn":14},{"ruleId":"191","severity":1,"message":"198","line":16,"column":8,"nodeType":"193","messageId":"194","endLine":16,"endColumn":13},{"ruleId":"191","severity":1,"message":"205","line":20,"column":10,"nodeType":"193","messageId":"194","endLine":20,"endColumn":22},{"ruleId":"191","severity":1,"message":"206","line":72,"column":23,"nodeType":"193","messageId":"194","endLine":72,"endColumn":37},{"ruleId":"187","replacedBy":"207"},{"ruleId":"189","replacedBy":"208"},{"ruleId":"187","replacedBy":"209"},{"ruleId":"189","replacedBy":"210"},{"ruleId":"191","severity":1,"message":"211","line":1,"column":27,"nodeType":"193","messageId":"194","endLine":1,"endColumn":42},{"ruleId":"191","severity":1,"message":"200","line":1,"column":28,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"212","line":15,"column":8,"nodeType":"193","messageId":"194","endLine":15,"endColumn":13},{"ruleId":"191","severity":1,"message":"213","line":59,"column":11,"nodeType":"193","messageId":"194","endLine":59,"endColumn":18},{"ruleId":"214","severity":1,"message":"215","line":81,"column":8,"nodeType":"216","endLine":81,"endColumn":10,"suggestions":"217"},{"ruleId":"191","severity":1,"message":"218","line":3,"column":56,"nodeType":"193","messageId":"194","endLine":3,"endColumn":68},{"ruleId":"187","replacedBy":"219"},{"ruleId":"189","replacedBy":"220"},{"ruleId":"191","severity":1,"message":"221","line":1,"column":18,"nodeType":"193","messageId":"194","endLine":1,"endColumn":24},{"ruleId":"187","replacedBy":"222"},{"ruleId":"189","replacedBy":"223"},{"ruleId":"191","severity":1,"message":"198","line":7,"column":8,"nodeType":"193","messageId":"194","endLine":7,"endColumn":13},{"ruleId":"214","severity":1,"message":"224","line":56,"column":8,"nodeType":"216","endLine":56,"endColumn":14,"suggestions":"225"},{"ruleId":"191","severity":1,"message":"204","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":14},{"ruleId":"214","severity":1,"message":"226","line":51,"column":8,"nodeType":"216","endLine":51,"endColumn":10,"suggestions":"227"},{"ruleId":"191","severity":1,"message":"228","line":1,"column":20,"nodeType":"193","messageId":"194","endLine":1,"endColumn":34},{"ruleId":"191","severity":1,"message":"229","line":6,"column":18,"nodeType":"193","messageId":"194","endLine":6,"endColumn":23},{"ruleId":"230","severity":1,"message":"231","line":33,"column":42,"nodeType":"232","messageId":"233","endLine":33,"endColumn":45},{"ruleId":"191","severity":1,"message":"234","line":35,"column":12,"nodeType":"193","messageId":"194","endLine":35,"endColumn":23},{"ruleId":"191","severity":1,"message":"235","line":3,"column":21,"nodeType":"193","messageId":"194","endLine":3,"endColumn":29},{"ruleId":"230","severity":1,"message":"231","line":10,"column":51,"nodeType":"232","messageId":"233","endLine":10,"endColumn":54},{"ruleId":"191","severity":1,"message":"236","line":11,"column":22,"nodeType":"193","messageId":"194","endLine":11,"endColumn":33},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.",["237"],["238"],"'Axios' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'errorMessage' is assigned a value but never used.",["237"],["238"],"'Post' is defined but never used.","'InitialState' is defined but never used.","'setLogginError' is assigned a value but never used.",["237"],["238"],["237"],["238"],"'combineReducers' is defined but never used.","'axios' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleSubmit' and 'onSubmit'. Either include them or remove the dependency array.","ArrayExpression",["239"],"'loginPayload' is defined but never used.",["237"],["238"],"'Button' is defined but never used.",["237"],["238"],"React Hook useEffect has missing dependencies: 'dispatch' and 'logged'. Either include them or remove the dependency array.",["240"],"React Hook useEffect has missing dependencies: 'fetchCallback' and 'fetchOptions'. Either include them or remove the dependency array. If 'fetchCallback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["241"],"'SnackbarOrigin' is defined but never used.","'IPost' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'showOptions' is assigned a value but never used.","'IComment' is defined but never used.","'setComments' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},"Update the dependencies array to be: [handleSubmit, onSubmit]",{"range":"248","text":"249"},"Update the dependencies array to be: [dispatch, logged, user]",{"range":"250","text":"251"},"Update the dependencies array to be: [fetchCallback, fetchOptions]",{"range":"252","text":"253"},[2599,2601],"[handleSubmit, onSubmit]",[1792,1798],"[dispatch, logged, user]",[1460,1462],"[fetchCallback, fetchOptions]"]